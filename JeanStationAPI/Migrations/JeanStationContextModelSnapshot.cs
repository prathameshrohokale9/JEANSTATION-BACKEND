// <auto-generated />
using System;
using JeanStationAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JeanStationAPI.Migrations
{
    [DbContext(typeof(JeanStationContext))]
    partial class JeanStationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JeanStationAPI.Models.Cart", b =>
                {
                    b.Property<int>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("custId");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("itemCode")
                        .IsFixedLength();

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.Property<double?>("Value")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasColumnName("value")
                        .HasComputedColumnSql("([qty]*[price])", true);

                    b.HasKey("CustId", "ItemCode")
                        .HasName("PK__Cart__9D07223B6506D53D");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("JeanStationAPI.Models.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("custId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("CustName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("custName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("phoneNo")
                        .IsFixedLength();

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("pwd");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("userName");

                    b.HasKey("CustId")
                        .HasName("PK__Customer__9725F2C6A1FC69A3");

                    b.HasIndex(new[] { "UserName" }, "UQ__Customer__66DCF95C595F3A2D")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("JeanStationAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("empId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("empEmail");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("empName");

                    b.Property<string>("EmpPhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("empPhoneNo")
                        .IsFixedLength();

                    b.Property<string>("EmpPwd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("empPwd");

                    b.Property<string>("EmpUserName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("empUserName");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("storeId");

                    b.HasKey("EmpId")
                        .HasName("PK__Employee__AFB3EC0D384C8BBE");

                    b.HasIndex(new[] { "EmpUserName" }, "UQ__Employee__C7790080232A834E")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("JeanStationAPI.Models.Item", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("itemCode")
                        .IsFixedLength();

                    b.Property<string>("ItemImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("item_image");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("itemName");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("storeId");

                    b.HasKey("ItemCode")
                        .HasName("PK__Item__A22D0FD19AB3A1B9");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("JeanStationAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<string>("ItemCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("itemCode")
                        .IsFixedLength();

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("CustId")
                        .HasColumnType("int")
                        .HasColumnName("custId");

                    b.Property<double?>("ItemValue")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasColumnName("itemValue")
                        .HasComputedColumnSql("([qty]*[price])", true);

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasDefaultValue("order placed")
                        .HasColumnName("orderStatus");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("price");

                    b.Property<int?>("Qty")
                        .HasColumnType("int")
                        .HasColumnName("qty");

                    b.HasKey("OrderId", "ItemCode")
                        .HasName("PK__orders__022BE3A015B3B57C");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("JeanStationAPI.Models.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("storeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("location");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("phoneNo")
                        .IsFixedLength();

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("storeName");

                    b.HasKey("StoreId")
                        .HasName("PK__Store__1EA71613B00203F8");

                    b.ToTable("Store", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
